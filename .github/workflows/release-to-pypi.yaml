name: Sign package with Sigstore and release it to PyPI

on:
  release:
    types:
      - published

jobs:
  sign-and-release:
    permissions:
        id-token: write
        contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache

      - name: Remove old checksums and Sigstore verification materials files
        uses: EndBug/add-and-commit@v9.1.1
        with:
          remove: '--ignore-unmatch checksums-*'
          author_name: Maya Costantini
          author_email: mcostant@redhat.com
          message: 'Remove old checksums and verification materials files'
          push: 'origin HEAD:master'

      - name: Get current date timestamp
        id: date
        run: | 
          echo "::set-output name=date::$(date +%s)"

      - name: Compute checksums file for all files in the project
        run: |
          find -type f -exec sha256sum "{}" + >| checksums-${{ steps.date.outputs.date }}.txt

      - name: Sign project with sigstore-python
        uses: sigstore/gh-action-sigstore-python@v1.1.0
        id: sigstore-python
        with:
          inputs: checksums-${{ steps.date.outputs.date }}.txt

      - name: Add and commit checksums file and Sigstore verification materials
        uses: EndBug/add-and-commit@v9.1.1
        with:
          add: "['checksums-${{ steps.date.outputs.date }}.txt', 'checksums-${{ steps.date.outputs.date }}.txt.sig', 'checksums-${{ steps.date.outputs.date }}.txt.crt', 'checksums-${{ steps.date.outputs.date }}.txt.sigstore']"
          author_name: Maya Costantini
          author_email: mcostant@redhat.com
          message: 'Update and sign checksums.txt manifest'
          push: 'origin HEAD:master'
      
      - name: Install pypa/build
        run: |
          python -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/ .

      - name: Publish ðŸ“¦ the new project version to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
